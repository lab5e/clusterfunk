// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.5.1
// source: sharding.proto

package shardpb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// The node ID and name list. This maps the nodes to each shard. The node
// is responsible for looking up the shards itself.
// The worker ID is assigned by the leader node. The worker ID might change
// each time the cluster reshards.
type WireNodes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId   int32  `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	NodeName string `protobuf:"bytes,2,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	WorkerId int32  `protobuf:"varint,3,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
}

func (x *WireNodes) Reset() {
	*x = WireNodes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sharding_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WireNodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WireNodes) ProtoMessage() {}

func (x *WireNodes) ProtoReflect() protoreflect.Message {
	mi := &file_sharding_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WireNodes.ProtoReflect.Descriptor instead.
func (*WireNodes) Descriptor() ([]byte, []int) {
	return file_sharding_proto_rawDescGZIP(), []int{0}
}

func (x *WireNodes) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *WireNodes) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *WireNodes) GetWorkerId() int32 {
	if x != nil {
		return x.WorkerId
	}
	return 0
}

// A single shard with an ID, a weight and the node ID for the responsible
// node.
type WireShard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Weight int32 `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
	NodeId int32 `protobuf:"varint,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *WireShard) Reset() {
	*x = WireShard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sharding_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WireShard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WireShard) ProtoMessage() {}

func (x *WireShard) ProtoReflect() protoreflect.Message {
	mi := &file_sharding_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WireShard.ProtoReflect.Descriptor instead.
func (*WireShard) Descriptor() ([]byte, []int) {
	return file_sharding_proto_rawDescGZIP(), []int{1}
}

func (x *WireShard) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WireShard) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *WireShard) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

// Shard distribution with a list of nodes and their assigned ID and the
// shards as set by the leader node.
type ShardDistribution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes  []*WireNodes `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Shards []*WireShard `protobuf:"bytes,2,rep,name=shards,proto3" json:"shards,omitempty"`
}

func (x *ShardDistribution) Reset() {
	*x = ShardDistribution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sharding_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardDistribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardDistribution) ProtoMessage() {}

func (x *ShardDistribution) ProtoReflect() protoreflect.Message {
	mi := &file_sharding_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardDistribution.ProtoReflect.Descriptor instead.
func (*ShardDistribution) Descriptor() ([]byte, []int) {
	return file_sharding_proto_rawDescGZIP(), []int{2}
}

func (x *ShardDistribution) GetNodes() []*WireNodes {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *ShardDistribution) GetShards() []*WireShard {
	if x != nil {
		return x.Shards
	}
	return nil
}

var File_sharding_proto protoreflect.FileDescriptor

var file_sharding_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x70, 0x62, 0x22, 0x5e, 0x0a, 0x09, 0x57, 0x69, 0x72,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x09, 0x57, 0x69, 0x72,
	0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x11, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52,
	0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x70, 0x62,
	0x2e, 0x57, 0x69, 0x72, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x73, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x3b, 0x73, 0x68, 0x61, 0x72, 0x64, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sharding_proto_rawDescOnce sync.Once
	file_sharding_proto_rawDescData = file_sharding_proto_rawDesc
)

func file_sharding_proto_rawDescGZIP() []byte {
	file_sharding_proto_rawDescOnce.Do(func() {
		file_sharding_proto_rawDescData = protoimpl.X.CompressGZIP(file_sharding_proto_rawDescData)
	})
	return file_sharding_proto_rawDescData
}

var file_sharding_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_sharding_proto_goTypes = []interface{}{
	(*WireNodes)(nil),         // 0: shardpb.WireNodes
	(*WireShard)(nil),         // 1: shardpb.WireShard
	(*ShardDistribution)(nil), // 2: shardpb.ShardDistribution
}
var file_sharding_proto_depIdxs = []int32{
	0, // 0: shardpb.ShardDistribution.nodes:type_name -> shardpb.WireNodes
	1, // 1: shardpb.ShardDistribution.shards:type_name -> shardpb.WireShard
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_sharding_proto_init() }
func file_sharding_proto_init() {
	if File_sharding_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sharding_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WireNodes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sharding_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WireShard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sharding_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardDistribution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sharding_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sharding_proto_goTypes,
		DependencyIndexes: file_sharding_proto_depIdxs,
		MessageInfos:      file_sharding_proto_msgTypes,
	}.Build()
	File_sharding_proto = out.File
	file_sharding_proto_rawDesc = nil
	file_sharding_proto_goTypes = nil
	file_sharding_proto_depIdxs = nil
}
